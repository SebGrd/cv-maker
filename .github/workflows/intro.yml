name: Intro to Github actions

env:
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
  VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}
  VERCEL_TOKEN: ${{secrets.VERCEL_TOKEN}}

on:
  push:

jobs:
  hello-world:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "Hello World!"
  build-test:
    needs: hello-world
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{env.STORE_PATH}}
          key: ${{runner.os}}-pnpm-store-${{hashFiles('**/pnpm-lock.yaml')}}
          restore-keys: |
            ${{runner.os}}-pnpm-store-
  
      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Run
        run: |
          pnpm run preview &
          sleep 5
      - name: Curl the server
        run: curl -I http://localhost:4173
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{env.STORE_PATH}}
          key: ${{runner.os}}-pnpm-store-${{hashFiles('**/pnpm-lock.yaml')}}
          restore-keys: |
            ${{runner.os}}-pnpm-store-

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Get Vercel envs
        run: vercel pull --yes --environment=production --token=${{secrets.VERCEL_TOKEN}}
        env:
          VERCEL_ORG_ID: ${{env.VERCEL_ORG_ID}}
          VERCEL_PROJECT_ID: ${{env.VERCEL_PROJECT_ID}}

      - name: Build project Artifacts
        run: vercel build --token=${{env.VERCEL_TOKEN}}

      - name: Deploy on Vercel
        run: vercel deploy --prebuilt --token=${{env.VERCEL_TOKEN}}
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Install dependancies
        run: npm install
      - name: Install Netlify CLI
        run: npm install netlify-cli -g

      - name: Build project
        run: netlify build
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Deploy on Netlify
        run: netlify deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}